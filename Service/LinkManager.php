<?php

namespace Shaythamc\LinkManagementBundle\Service;

use ArrayObject;
use Shaythamc\LinkManagementBundle\Entity\Backlink;

/**
 * A wrapper for the Entity\Link class
 */
class LinkManager{

	protected $database;
	
	public function __construct(Database $database){
		$this->database = $database;
	}
	
	/**
	 * Add a link to the database
	 * @param array $linkArray 
	 * @return boolean
	 */
	public function addLink($linkArray){
		
		// These fields are generated by the database 
		unset($linkArray['linkId']);
		unset($linkArray['dateAdded']);
		
		// Prepend a ':' to each array key so as to format it for our
		// prepared statement
		$data = array();
		foreach($linkArray as $key => $linkAttribute){
			$data[':' . $key] = $linkAttribute;
		}
		
		// The query
		$query = 'INSERT INTO Links(title, url, webmasterId, keyword_notes, notes, expiration, backlinks, anchor_text, price, active) VALUES(:title, :url, :webmasterId, :keywordNotes, :notes, :expiration, :backlinks, :anchorText, :price, :active)';
		
		// Access the database, send the query and update it
		$this->database->update($query, $data);
	}
	
	/**
	 * Get all information associated with a link from the database
	 * @param int $linkId 
	 * @return array
	 */
	public function getLink($linkId){
		$query = 'SELECT * FROM Links WHERE linkId = :linkId';
		$data = array(
			':linkId' => $linkId,
		);
		
		$linkArray = $this->database->retrieve($query, $data);

		return $linkArray[0];
	}
	
	/**
	 * Get all links and all information associated with all links
	 * @return array
	 */
	public function getAllLinks(){
		$query = 'SELECT * FROM Links';
		return $this->database->retrieve($query);
	}
	
	/**
	 * Edit a link
	 * @param int $linkId
	 * @return
	 */
	public function editLink($linkId, $linkArray){
		
		$query = 'UPDATE Links SET title = :title, url = :url, webmasterId = :webmasterId, keyword_notes = :keywordNotes, notes = :notes, expiration = :expiration, backlinks = :backlinks, anchor_text = :anchorText, price = :price, active = :active WHERE linkId = :linkId';
		
		unset($linkArray['dateAdded']);
		
		$data = array();
		foreach($linkArray as $key => $linkAttribute){
			$data[':' . $key] = $linkAttribute;
		}
		
		$this->database->update($query, $data);
	}
	
	/**
	 * Delete a link
	 * @param int $linkId
	 * @return boolean
	 */
	public function deleteLink($linkId){
		
		$query = 'DELETE FROM Links WHERE linkId = :linkId';
		$data = array(
			':linkId' => $linkId,
		);
		
		$this->database->update($query, $data);
	}
	
	/**
	 * Delete any links associated with a webmaster
	 * @param int $webmasterId
	 * @return bool
	 */
	public function deleteLinkByWebmaster($webmasterId){
	
	}
	
	/**
	 * Activate (or disable) a link
	 * @return boolean
	 * @result causes a Transaction to occur if link is activated
	 */
	public function activateLink($linkId){
		$query = 'UPDATE Links SET ';
	}

}

?>
