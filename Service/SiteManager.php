<?php

namespace Shaythamc\LinkManagementBundle\Service;

/**
 * A wrapper for the Entity\Site class
 */
class SiteManager{

	protected $database;
	
	public function __construct(Database $database){
		$this->database = $database;
	}
	
	/**
	 * Add a link to the database
	 * @param array $siteArray 
	 * @return boolean
	 */
	public function addSite($siteArray){
		
		// These fields are generated by the database 
		unset($siteArray['siteId']);
		unset($siteArray['dateAdded']);
		unset($siteArray['totalCost']);
		unset($siteArray['googlePR']);
		unset($siteArray['alexaGR']);
		
        
		// Prepend a colon to each array key to format it for our
		// prepared statement
		$data = array();
		foreach($siteArray as $key => $siteAttribute){
			$data[':' . $key] = $siteAttribute;
		}
		
		// The query
		$query = 'INSERT INTO Sites(title, url, webmasterId, keyword, page_found, source, notes, price, budgetId, active) VALUES(:title, :url, :webmasterId, :keyword, :pageFound, :source, :notes, :price, :budgetId, :active)';
		
		// Access the database, send the query and update it
		$this->database->update($query, $data);
	}
	
	/**
	 * Get all information associated with a link from the database
	 * @param int $linkId 
	 * @return array
	 */
	public function getSite($siteId){
		$query = 'SELECT * FROM Sites WHERE siteId = :siteId';
		$data = array(
			':siteId' => $siteId,
		);
		
		$siteArray = $this->database->retrieve($query, $data);

		return $siteArray[0];
	}
    
    /**
     * Get all Sites URL's
     * @param int $siteId
     * @return array 
     */
    public function getSiteUrl($siteId){
        $query = 'SELECT url FROM Sites WHERE siteId = :siteId';
        $data = array(':siteId' => $siteId);
        $result = $this->database->retrieve($query, $data);
        return $result[0];
    }
    
    public function getAllSiteUrlWithId(){
        $query = 'SELECT siteId, url FROM Sites';
        return $this->database->retrieve($query);
    }
	
	/**
	 * Get all sites and all information associated with all links
	 * @return array
	 */
	public function getAllSites(){
		$query = 'SELECT * FROM Sites';
		return $this->database->retrieve($query);
	}
	
	/**
	 * Edit a site
	 * @param int $siteId
	 * @return
	 */
	public function editSite($siteId, $siteArray){
		
		$query = 'UPDATE Sites SET title = :title, url = :url, webmasterId = :webmasterId, keyword = :keyword, page_found = :pageFound, source = :source, notes = :notes WHERE siteId = :siteId';
		
		unset($siteArray['dateAdded']);
        unset($siteArray['totalCost']);
		unset($siteArray['googlePR']);
		unset($siteArray['alexaGR']);
        
		$data = array();
		foreach($siteArray as $key => $siteAttribute){
			$data[':' . $key] = $siteAttribute;
		}
		
		$this->database->update($query, $data);
	}
    
    public function updateGooglePR($googlePR, $siteId){
        $query = 'UPDATE Sites SET google_pr = :googlePR WHERE siteId = :siteId';
        $data = array(
                    ':googlePR' => $googlePR,
                    ':siteId' => $siteId,
            );
        $this->database->update($query, $data);
    }
    
    public function updateAlexaGR($alexaGR, $siteId){
        $query = 'UPDATE Sites SET alexa_gr = :alexaGR WHERE siteId = :siteId';
        $data = array(
                    ':alexaGR' => $alexaGR,
                    ':siteId' => $siteId,
            );
        $this->database->update($query, $data);
    }
	
	/**
	 * Delete a site
	 * @param int $siteId
	 * @return boolean
	 */
	public function deleteSite($siteId){
		
		$query = 'DELETE FROM Sites WHERE siteId = :siteId';
		$data = array(
			':siteId' => $siteId,
		);
		
		$this->database->update($query, $data);
	}
	
	/**
	 * Delete any sites associated with a webmaster
	 * @param int $webmasterId
	 * @return bool
	 */
	public function deleteSitesByWebmaster($webmasterId){
		
		$query = 'DELETE FROM Sites WHERE webmasterId = :webmasterId';
		$data = array(
			':webmasterId' => $webmasterId,
		);
		
		$this->database->update($query, $data);
		
	}
    
    public function getAllSiteId(){
        $query = 'SELECT siteId FROM Sites';
        return $this->database->retrieve($query);
    }


}

?>
